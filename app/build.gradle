apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'//用于编译Android代码
apply plugin: 'kotlin-android-extensions'//用于扩展绑定关系
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion parent.ext.androidCompileSdkVersion
    buildToolsVersion "$androidBuildToolsVersion"
    defaultConfig {
        applicationId androidApplicationId
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        kapt {
            arguments {
                arg("moduleName", project.getName())
            }
        }
    }
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v2SigningEnabled false
        }
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //apk命名
            android.applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        //这里修改apk文件名
                        def fileName = "SudiProject-${defaultConfig.versionCode}-${defaultConfig.versionName}-${releaseTime()}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
    }
    //设置虚拟机堆内存空间大小，避免在编译期间OOM
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
    //打包不检查
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    allprojects {
        repositories {
            maven { url 'https://jitpack.io' }
        }
    }
}
//kapt {
//    //Databinding
//    generateStubs = true
//}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.github.ysrfeng:Qrcore_library:V1.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile project(':library')
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.alibaba:arouter-api:$arouterVersion"
    kapt  "com.alibaba:arouter-compiler:$aroutercompilerVersion"
    testCompile 'junit:junit:4.12'
}
repositories {
    mavenCentral()
}
